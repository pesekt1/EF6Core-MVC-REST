##################### courses ##############################

### get courses
GET https://{{host}}/api/courses

### create new course record
POST https://{{host}}/api/courses HTTP/1.1
Content-Type: application/json

{
  "title": "Java2",
  "credits": 10
}

### delete course with given id
DELETE https://{{host}}/api/courses/7 HTTP/1.1
Content-Type: application/json

### udate course record
PUT https://{{host}}/api/courses/8 HTTP/1.1
Content-Type: application/json

{
  "courseID": 8,
  "credits": 5,
  "title": "Java6"
}

####################### students ################################


### get studetns
GET https://{{host}}/api/students HTTP/1.1

### create new student record
POST https://{{host}}/api/students HTTP/1.1
Content-Type: application/json

{
  "lastName": "John",
  "firstMidName": "Jones",
  "enrollmentDate": "2021-05-04T07:37:55.493Z"
}

### delete student with given id
DELETE https://{{host}}/api/students/7 HTTP/1.1
Content-Type: application/json

### update student record
PUT https://{{host}}/api/students/15 HTTP/1.1
Content-Type: application/json

{
  "ID": 15,
  "lastName": "Jones II",
  "firstMidName": "John",
  "enrollmentDate": "2021-05-04T07:37:55.493Z"
}


########################## users ##########################

### get users
GET https://{{host}}/api/users

### create new user record - registration
POST https://{{host}}/api/users HTTP/1.1
Content-Type: application/json

{
  "email": "pesekt@gmail.com",
  "password": "123456",
  "userName": "pesekt"
}

######################### roles #############################

### get users
GET https://{{host}}/api/roles

### create new user record
POST https://{{host}}/api/roles HTTP/1.1
Content-Type: application/json

{
  "name": "customer"
}


############################# security #############################

### login with credentials, we get a JWT and save it in client.global - session variable auth_token
POST https://{{host}}/api/Auth/login?username=pesekt&password=123456

> {% client.global.set("auth_token", response.body.token);
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
client.test("JWT acquired successfully", function() {
  client.assert(response.body.token != null, "JWT not acquired");
});
%}

###
GET https://{{host}}/api/roles HTTP/1.1

### request with JWT authorizaton, we need to login and then use the JWT to access this endpoint
GET https://{{host}}/api/roles HTTP/1.1
Authorization: Bearer {{auth_token}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}


################ json-server ##########################

### get users
GET http://localhost:3001/posts

###
GET https://{{host}}/api/JsonServerRest